#!/usr/bin/env perl
use strict;
use warnings;

use Directory::Queue;
use FindBin qw($Bin);
use Path::Tiny;
use SearchAd::Schema;
use WWW::Naver::SearchAd::Rank qw/enqueue/;
use Parallel::ForkManager;
use Redis;

STDOUT->autoflush(1);

my $config  = require "$Bin/../searchad.conf";
my $db_conf = $config->{database};
my $schema  = SearchAd::Schema->connect(
    {
        dsn      => $db_conf->{dsn},
        user     => $db_conf->{user},
        password => $db_conf->{pass},
        %{ $db_conf->{opts} },
    }
);

my @socks = path("$Bin/../socks.list")->lines;
map { chomp } @socks;

my $redis = Redis->new;
map { $redis->lpush( 'searchad:socks', $_ ) } @socks;

my $pm = Parallel::ForkManager->new( scalar @socks );
my $dirq = Directory::Queue->new( path => '/tmp/searchad' );

while (1) {
    my $rs = $schema->resultset('Rank')->search( { on_off => 1 } );

    LOOPS:
    while ( my $r = $rs->next ) {
        $pm->start and next LOOPS;
        while ( my $socks = $redis->lpop('searchad:socks') ) {
            enqueue( $dirq, $r, $socks );
            $redis->lpush( 'searchad:socks', $socks );
            $pm->finish;
            last;
        }
    }

    sleep(120);
}
