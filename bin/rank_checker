#!/usr/bin/env perl
use strict;
use warnings;

use Directory::Queue;
use SearchAd::Schema;
use WWW::Naver::SearchAd::Rank 'find_rank';

STDOUT->autoflush(1);

my $schema = SearchAd::Schema->connect(
    {
        dsn            => "dbi:SQLite:db/searchad.db",
        quote_char     => q{`},
        sqlite_unicode => 1,
    }
);

my $dirq = Directory::Queue->new( path => '/tmp/searchad' );

while (1) {
    my $rs = $schema->resultset('Rank')->search( { on_off => 1 } );
    while ( my $r = $rs->next ) {
        my $tobe = $r->tobe;
        my $max  = $r->bid_max;
        my $min  = $r->bid_min;
        my $int  = $r->bid_interval;
        my $amt  = $r->bid_amt;

        return unless $tobe or $max or $min or $int or $amt;

        my $adkeyword = $r->adkeywords->next;
        my $adgroup   = $adkeyword->adgroup;
        my $campaign  = $adgroup->campaign;
        my $user      = $campaign->user;
        my $url       = $adgroup->target->url;
        $url =~ s{^https?://}{};
        my $rank = find_rank( $adkeyword->name, $url ) || 0;
        $r->update( { rank => $rank } );

        next if $rank == $tobe;

        if ($rank) {
            $int *= -1 if $rank < $tobe;
        }

        my $distance = $tobe - $rank;
        $distance *= -1 if $distance < 0;
        $amt = $amt + $int * $distance;
        $amt = $min if $amt < $min;
        $amt = $max if $amt > $max;

        my $str = sprintf '%s:%s:%s:%s:%s', $r->id, $amt, $adkeyword->str_id, $adgroup->str_id, $user->id;
        print STDERR "$str\n";
        $dirq->add($str);
    }

    sleep(120);
}
