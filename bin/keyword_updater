#!/usr/bin/env perl
use strict;
use warnings;

use Directory::Queue;
use SearchAd::Schema;
use WWW::Naver::SearchAd;
use Mojo::JSON qw/decode_json/;
use FindBin qw($Bin);

STDOUT->autoflush(1);

my $config  = require "$Bin/../searchad.conf";
my $db_conf = $config->{database};
my $schema  = SearchAd::Schema->connect(
    {
        dsn      => $db_conf->{dsn},
        user     => $db_conf->{user},
        password => $db_conf->{pass},
        %{ $db_conf->{opts} },
    }
);

my $dirq = Directory::Queue->new( path => '/tmp/searchad' );

while (1) {
    for ( my $name = $dirq->first(); $name; $name = $dirq->next() ) {
        next unless $dirq->lock($name);

        my $str = $dirq->get($name);
        my ( $rank_id, $amt, $keyword_id, $group_id, $user_id ) = split /:/, $str;

        my $rank = $schema->resultset('Rank')->find( { id => $rank_id } );

        if ( $rank->bid_amt == $amt ) {
            $dirq->remove($name);
            next;
        }

        my $user = $schema->resultset('User')->find( { id => $user_id } );
        my $api = WWW::Naver::SearchAd->new(
            customer_id => $user->customer_id,
            key         => $user->api_key,
            secret      => $user->api_secret
        );

        my $json = $api->update_keyword( $keyword_id, $amt, 'false', $group_id );
        if ($json) {
            my $data = decode_json($json);
            $rank->update( { bid_amt => $data->{bidAmt} } );
        }
        $dirq->remove($name);
    }

    sleep(10);
}
